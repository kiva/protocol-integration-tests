# Required environment variables (set these in CircleCI):
# DOCKER_LOGIN - Dockerhub service account username
# DOCKER_PASSWORD - Dockerhub service account password
#
# Also expects (should be automatically set by CircleCI - https://circleci.com/docs/2.0/env-vars/):
# CIRCLE_SHA1 - The SHA1 hash of the last commit of the current build.

version: 2.1

jobs:
  validate-and-publish-dev-orb:
    machine:
      image: ubuntu-1604:201903-01
    steps:
      - checkout
      - circleci/install
      - run:
          name: Validate orb.yaml
          command: circleci orb validate .circleci/orb.yml
      - run:
          name: Publish dev orb
          command: circleci orb publish .circleci/orb.yml kiva/protocol-integration-tests@dev:${CIRCLE_SHA1}

#  build-and-test:
#    machine:
#      image: ubuntu-1604:201903-01
#    steps:
#      - checkout
#      - run:
#          name: Setup shell environment
#          command: |
#            ./scripts/setup_env.sh
#            echo $AUTH0_ENV | base64 --decode >> .env
#            echo ' [ -s "$NVM_DIR/nvm.sh" ] && \. "$NVM_DIR/nvm.sh"' >> $BASH_ENV
#      - run:
#          name: Setup node
#          command: |
#              nvm install v14.15.1
#              node -v
#              nvm alias default v14.15.1
#      - run:
#          name: Get ACAPy
#          command: docker pull bcgovimages/aries-cloudagent:py36-1.15-1_0.6.0
#      - run:
#          name: Start docker compose and wait for readiness
#          command: |
#            docker-compose -f docker-compose.yml build
#            docker-compose -f docker-compose.yml up -d
#            sleep 20
#            docker-compose -f docker-compose.yml logs
#      - run:
#          name: Healthcheck services
#          command: |
#              ./scripts/healthstack.sh
#      - run:
#          name: Setup integration tests
#          command: |
#            npm install
#            ./scripts/setup_fixtures.sh
#      - run:
#          name: Running integration tests (only health tests for now)
#          command: |
#            if ! npm run test ; then
#              echo "Tests failed. Server logs:";
#              docker-compose -f docker-compose.yml logs;
#              exit 1;
#            fi

workflows:
  build-test-deploy:
    jobs:
      - validate-orb-yaml:
          filters: # run for all branches AND tags
            tags:
              only: /.*/
      - integration-tests/run:
          with_override: false
#      - build-and-test:
#          requires:
#            - validate-orb-yaml
#          filters: # run for all branches AND tags
#              tags:
#                  only: /.*/

orbs:
  node: circleci/node@1.1.6
  docker: circleci/docker@1.3.0
  circleci: circleci/circleci-cli@0.1.9
  integration-tests: kiva/protocol-integration-tests@dev:0.0.1
